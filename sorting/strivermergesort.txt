//{ Driver Code Starts
#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;



/* Function to print an array */
void printArray(int arr[], int size)
{
    int i;
    for (i=0; i < size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}


// } Driver Code Ends
class Solution
{
    public:
    void merge(int arr[], int l, int m, int r)
    {
         // Your code here
        
        int left=m-l+1;
        int right=r-m;
        
        int left_arr[left];
        int right_arr[right];
      
        for(int i=0;i<left;i++){
            left_arr[i]=arr[l+i];
        }
        
        
        
        for (int j=0 ;j<right;j++){
            right_arr[j]=arr[m+j+1];
        }
        
        
        
        int i=0;
        int j=0;
        int k=l;
        while (i < left && j < right) {
            if (left_arr[i] <= right_arr[j]) {
                arr[k++] = left_arr[i++];
            } else {
                arr[k++] = right_arr[j++];
            }
        }

        while (i < left) {
            arr[k++] = left_arr[i++];
        }

        while (j < right) {
            arr[k++] = right_arr[j++];
        }
    }
    public:
    void mergeSort(int arr[], int l, int r)
    {
        //code here
        int m;
        if (l<r){
            m = l + (r - l) / 2;
            mergeSort(arr,l,m);
            mergeSort(arr,m+1,r);
            merge(arr,l,m,r);
        
        
        
        }
    }
};

//{ Driver Code Starts.


int main()
{
    int n,T,i;

    scanf("%d",&T);

    while(T--){
    
    scanf("%d",&n);
    int arr[n+1];
    for(i=0;i<n;i++)
      scanf("%d",&arr[i]);

    Solution ob;
    ob.mergeSort(arr, 0, n-1);
    printArray(arr, n);
    }
    return 0;
}
// } Driver Code Ends